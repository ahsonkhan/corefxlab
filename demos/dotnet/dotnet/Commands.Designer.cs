//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dotnet {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Commands {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Commands() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dotnet.Commands", typeof(Commands).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - deletes tools, packages, and bin project subdirectories.
        /// </summary>
        internal static string CommandCleanDescription {
            get {
                return ResourceManager.GetString("CommandCleanDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - generates debugging information.
        /// </summary>
        internal static string CommandDebugDescription {
            get {
                return ResourceManager.GetString("CommandDebugDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - help.
        /// </summary>
        internal static string CommandHelpDescription {
            get {
                return ResourceManager.GetString("CommandHelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - logs diagnostics info.
        /// </summary>
        internal static string CommandLogDescription {
            get {
                return ResourceManager.GetString("CommandLogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - creates template sources for a new console app.
        /// </summary>
        internal static string CommandNewDescription {
            get {
                return ResourceManager.GetString("CommandNewDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - enables optimizations performed by the compiler.
        /// </summary>
        internal static string CommandOptimizeDescription {
            get {
                return ResourceManager.GetString("CommandOptimizeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - specifies which platform this code can run on, default is anycpu.
        /// </summary>
        internal static string CommandPlatformDescription {
            get {
                return ResourceManager.GetString("CommandPlatformDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProjectFile.
        /// </summary>
        internal static string CommandProjectFile {
            get {
                return ResourceManager.GetString("CommandProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - compiles the sources in the current directory and subdirectories specified by the wildcard.
        /// </summary>
        internal static string CommandRecurseDescription {
            get {
                return ResourceManager.GetString("CommandRecurseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceFiles.
        /// </summary>
        internal static string CommandSourceFiles {
            get {
                return ResourceManager.GetString("CommandSourceFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - compiles the sources in the current directory into an exe (default) or dll.
        /// </summary>
        internal static string CommandTargetDescription {
            get {
                return ResourceManager.GetString("CommandTargetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - allows compilation of code that uses the unsafe keyword.
        /// </summary>
        internal static string CommandUnsafeDescription {
            get {
                return ResourceManager.GetString("CommandUnsafeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [-l] [-t:{exe|library}] [-r:&lt;wildcard&gt;] [-d:{full|pdbonly}] [-o] [-u] [-p:{anycpu|anycpu32bitpreferred|x86|x64}] [ProjectFile] [SourceFiles].
        /// </summary>
        internal static string LinuxCommandAllOptionsUsage {
            get {
                return ResourceManager.GetString("LinuxCommandAllOptionsUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -c.
        /// </summary>
        internal static string LinuxCommandClean {
            get {
                return ResourceManager.GetString("LinuxCommandClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -d.
        /// </summary>
        internal static string LinuxCommandDebug {
            get {
                return ResourceManager.GetString("LinuxCommandDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -?.
        /// </summary>
        internal static string LinuxCommandHelp1 {
            get {
                return ResourceManager.GetString("LinuxCommandHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -help.
        /// </summary>
        internal static string LinuxCommandHelp2 {
            get {
                return ResourceManager.GetString("LinuxCommandHelp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -h.
        /// </summary>
        internal static string LinuxCommandHelp3 {
            get {
                return ResourceManager.GetString("LinuxCommandHelp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -l.
        /// </summary>
        internal static string LinuxCommandLog {
            get {
                return ResourceManager.GetString("LinuxCommandLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -n.
        /// </summary>
        internal static string LinuxCommandNew {
            get {
                return ResourceManager.GetString("LinuxCommandNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -o.
        /// </summary>
        internal static string LinuxCommandOptimize {
            get {
                return ResourceManager.GetString("LinuxCommandOptimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -p.
        /// </summary>
        internal static string LinuxCommandPlatform {
            get {
                return ResourceManager.GetString("LinuxCommandPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -r.
        /// </summary>
        internal static string LinuxCommandRecurse {
            get {
                return ResourceManager.GetString("LinuxCommandRecurse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -.
        /// </summary>
        internal static string LinuxCommandStart {
            get {
                return ResourceManager.GetString("LinuxCommandStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -t.
        /// </summary>
        internal static string LinuxCommandTarget {
            get {
                return ResourceManager.GetString("LinuxCommandTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -u.
        /// </summary>
        internal static string LinuxCommandUnsafe {
            get {
                return ResourceManager.GetString("LinuxCommandUnsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - specifies which project file to use, default to the one in the current directory, if only one exists.
        /// </summary>
        internal static string ProjectFileDescription {
            get {
                return ResourceManager.GetString("ProjectFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - specifices which source files to compile.
        /// </summary>
        internal static string SourceFileDescription {
            get {
                return ResourceManager.GetString("SourceFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [/log] [/target:{exe|library}] [/recurse:&lt;wildcard&gt;] [/debug:{full|pdbonly}] [/optimize] [/unsafe] [/platform:{anycpu|anycpu32bitpreferred|x86|x64}] [ProjectFile] [SourceFiles].
        /// </summary>
        internal static string WinCommandAllOptionsUsage {
            get {
                return ResourceManager.GetString("WinCommandAllOptionsUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /clean.
        /// </summary>
        internal static string WinCommandClean {
            get {
                return ResourceManager.GetString("WinCommandClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /debug.
        /// </summary>
        internal static string WinCommandDebug {
            get {
                return ResourceManager.GetString("WinCommandDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /?.
        /// </summary>
        internal static string WinCommandHelp1 {
            get {
                return ResourceManager.GetString("WinCommandHelp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /help.
        /// </summary>
        internal static string WinCommandHelp2 {
            get {
                return ResourceManager.GetString("WinCommandHelp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /h.
        /// </summary>
        internal static string WinCommandHelp3 {
            get {
                return ResourceManager.GetString("WinCommandHelp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /log.
        /// </summary>
        internal static string WinCommandLog {
            get {
                return ResourceManager.GetString("WinCommandLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /new.
        /// </summary>
        internal static string WinCommandNew {
            get {
                return ResourceManager.GetString("WinCommandNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /optimize.
        /// </summary>
        internal static string WinCommandOptimize {
            get {
                return ResourceManager.GetString("WinCommandOptimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /platform.
        /// </summary>
        internal static string WinCommandPlatform {
            get {
                return ResourceManager.GetString("WinCommandPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /recurse.
        /// </summary>
        internal static string WinCommandRecurse {
            get {
                return ResourceManager.GetString("WinCommandRecurse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /.
        /// </summary>
        internal static string WinCommandStart {
            get {
                return ResourceManager.GetString("WinCommandStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /target.
        /// </summary>
        internal static string WinCommandTarget {
            get {
                return ResourceManager.GetString("WinCommandTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /unsafe.
        /// </summary>
        internal static string WinCommandUnsafe {
            get {
                return ResourceManager.GetString("WinCommandUnsafe", resourceCulture);
            }
        }
    }
}
